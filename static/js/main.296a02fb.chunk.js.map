{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","email","name","className","href","CommentInfo","comment","body","CommentList","comments","map","id","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"u38IAGaA,EAAW,SAAC,GAAD,QAAGC,KAAQC,EAAX,EAAWA,MAAOC,EAAlB,EAAkBA,KAAlB,OACtB,mBAAGC,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGC,KCHQG,G,MAAc,SAAC,GAAD,QAAGC,QAAWL,EAAd,EAAcA,MAAOM,EAArB,EAAqBA,KAAML,EAA3B,EAA2BA,KAA3B,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCD,IAEtC,OAED,mBACEC,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGI,SCfMC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,oBAAIN,UAAU,cAAd,SACGM,EAASC,KAAI,SAAAJ,GAAO,OACnB,6BACE,cAAC,EAAD,CAAaA,QAASA,KADfA,EAAQK,UCDVC,EAAW,SAAC,GAAD,QAAGC,KAAQC,EAAX,EAAWA,MAAOd,EAAlB,EAAkBA,KAAMO,EAAxB,EAAwBA,KAAME,EAA9B,EAA8BA,SAA9B,OAEtB,sBAAKN,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCW,IAEjC,8BACG,eAEAd,GAAS,cAAC,EAAD,CAAUA,KAAMA,UAK9B,mBAAGG,UAAU,iBAAb,SACGI,IAGFE,EAASM,OAAS,EAEf,cAAC,EAAD,CAAaN,SAAUA,IAEvB,qCACE,uBACA,mBAAG,UAAQ,oBAAX,oCCzBGO,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,oBAAId,UAAU,WAAd,SACGc,EAAMP,KAAI,SAAAG,GAAI,OACb,6BACE,cAAC,EAAD,CAAUA,KAAMA,KADTA,EAAKF,UCYb,IAAMM,EAAQC,EAAgBR,KAAI,SAAAG,GAAI,kCACxCA,GADwC,IAE3Cb,MAdmBmB,EAcDN,EAAKM,OAbLC,EAAgBC,MAAK,SAAArB,GAAI,OAAIA,EAAKW,KAAOQ,MAEvC,MAYpBV,UATuBa,EASGT,EAAKF,GARxBY,EAAmBC,QAAO,SAAAlB,GAAO,OACtCA,EAAQgB,SAAWA,QAFvB,IAAyBA,EANJH,KAkBRM,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUc,MAAOA,QCxBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.296a02fb.chunk.js","sourcesContent":["import React from 'react';\nimport './UserInfo.scss';\n\nexport const UserInfo = ({ user: { email, name } }) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","import React from 'react';\n\nexport const CommentInfo = ({ comment: { email, body, name } }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{name}</strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${email}`}\n      >\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {body}\n    </div>\n  </div>\n);\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <ul className=\"CommentList\">\n    {comments.map(comment => (\n      <li key={comment.id}>\n        <CommentInfo comment={comment} />\n      </li>\n    ))}\n  </ul>\n);\n","import React from 'react';\nimport './PostInfo.scss';\nimport { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\n\nexport const PostInfo = ({ post: { title, user, body, comments } }) => (\n\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{title}</h3>\n\n      <p>\n        {' Posted by  '}\n\n        {user && (<UserInfo user={user} />)}\n      </p>\n\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {body}\n    </p>\n\n    {comments.length > 0\n      ? (\n        <CommentList comments={comments} />\n      ) : (\n        <>\n          <hr />\n          <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n        </>\n      )}\n  </div>\n);\n","import React from 'react';\nimport './PostList.scss';\nimport { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <ul className=\"PostList\">\n    {posts.map(post => (\n      <li key={post.id}>\n        <PostInfo post={post} />\n      </li>\n    ))}\n  </ul>\n);\n","import React from 'react';\nimport './App.scss';\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nfunction getCommentsById(postId) {\n  return commentsFromServer.filter(comment => (\n    comment.postId === postId\n  ));\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}